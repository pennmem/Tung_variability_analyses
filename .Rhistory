summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
logit = function(x)
{
x[which(x==0)] = 0.001
x[which(x ==1)] = 0.999
return(log(x/(1-x)))
}
assign_block = function(x)
{
x[which(x<=8)] = 1
x[which((8< x) & (x <=16))] =2
x[which((16<x) & (x<=24))] = 3
return(x)
}
assign_list = function(x)
{
x[which((8< x) & (x <=16))] = x[which((8< x) & (x <=16))]-8
x[which((16<x) & (x<=24))] = x[which((16<x) & (x<=24))]-16
return(x)
}
scale_feature = function(x)
{
x= (x-min(x))/(max(x)-min(x))
}
assign_time = function(x)
{
h = (x%%100)+ floor(x/100)*60
}
data_path = 'ltpfr2_data_processed.csv'
ltpfr2 = fread(data_path)
ltpfr2 = as.data.frame(ltpfr2)
indices = which((ltpfr2['Day'] != 'Sat') & (ltpfr2['Day'] != 'Sun') )
ltpfr2 = ltpfr2[indices,]
ltpfr2['recalled'] = factor(ltpfr2[['recalled']])
ltpfr2['session'] = scale(ltpfr2[['session']]+1)
ltpfr2['Day'] = factor(ltpfr2[['Day']])
#ltpfr2['Block'] = assign_block(ltpfr2[['list']])
#ltpfr2['list'] = assign_list(ltpfr2[['list']])
ltpfr2['list'] = factor(ltpfr2[['list']])
ltpfr2['Alertness'] = scale(ltpfr2[['Alertness']])
ltpfr2['Time'] = scale(assign_time(ltpfr2[['Time']]))
ltpfr2['Sleep'] = scale(ltpfr2[['Sleep']])
#ltpfr2['Block'] = factor(ltpfr2[['Block']])
n_total_lists = dim(ltpfr2)[1]/24
subjects = unique(ltpfr2[['subject']])
model_lists = list()
for (subject in subjects)
{
indices_subject = which(ltpfr2[['subject']] == subject)
subject_data = ltpfr2[indices_subject,]
# model_subject = glm(recalled ~ serial_pos + list + session +  Alertness + Sleep + Time + Day + list +  recallability -1, data = subject_data, family = 'binomial')
model_subject = glm(recalled ~ -1 + session + Sleep + Alertness + Time + Day + list + Recallability + serial_pos, data = subject_data, family = 'binomial')
model_lists[[subject]] = model_subject
}
# plot coefficients
coeffs_list = lapply(model_lists, function(x){summary(x)$coefficients})
vars_list = c('session', 'Sleep', 'Alertness', 'Time')
inter_session_vars = data.frame()
inter_session_p_vals = data.frame()
for(j in 1:length(coeffs_list)){
coeffs = coeffs_list[[j]]
inter_session_vars = rbind(inter_session_vars, coeffs[vars_list,][,'Estimate'])
inter_session_p_vals = rbind(inter_session_p_vals, coeffs[vars_list,][,4])
}
names(inter_session_vars ) = vars_list
names(inter_session_p_vals ) = vars_list
inter_session_p_vals = apply(inter_session_p_vals,2, p.adjust)
inter_session_vars_melt = melt(inter_session_vars, ids = vars_list[2:4])
inter_session_p_vals_melt = melt(inter_session_p_vals)
inter_session_p_vals_melt['signif'] = (inter_session_p_vals_melt['value'] < 0.05)
means = apply(inter_session_vars, 2,mean)
ses = apply(inter_session_vars,2,sd)
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( shape = inter_session_p_vals_melt[['signif']]))
# between sessions variability
# between list variability
# within list variability
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]))
# plot coefficients
coeffs_list = lapply(model_lists, function(x){summary(x)$coefficients})
vars_list = c('session', 'Sleep', 'Alertness', 'Time')
inter_session_vars = data.frame()
inter_session_p_vals = data.frame()
for(j in 1:length(coeffs_list)){
coeffs = coeffs_list[[j]]
inter_session_vars = rbind(inter_session_vars, coeffs[vars_list,][,'Estimate'])
inter_session_p_vals = rbind(inter_session_p_vals, coeffs[vars_list,][,4])
}
names(inter_session_vars ) = vars_list
names(inter_session_p_vals ) = vars_list
inter_session_p_vals = apply(inter_session_p_vals,2, p.adjust)
inter_session_p_vals
inter_session_vars_melt = melt(inter_session_vars, ids = vars_list[2:4])
inter_session_p_vals_melt = melt(inter_session_p_vals)
inter_session_p_vals_melt['signif'] = (inter_session_p_vals_melt['value'] < 0.05)
means = apply(inter_session_vars, 2,mean)
ses = apply(inter_session_vars,2,sd)
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]))
p_ajdust = function(x)
{
return(p.adjust(x, "fdr"))
}
inter_session_p_vals = apply(inter_session_p_vals,2, p_adjust)
p_ajdust = function(x)
{
return(p.adjust(x, "fdr"))
}
inter_session_p_vals = apply(inter_session_p_vals,2, p_adjust)
p.adjust()
p.adjust()
p.adjust
p_adjust = function(x)
{
return(p.adjust(x, "fdr"))
}
inter_session_p_vals = apply(inter_session_p_vals,2, p_adjust)
inter_session_vars_melt = melt(inter_session_vars, ids = vars_list[2:4])
inter_session_p_vals_melt = melt(inter_session_p_vals)
inter_session_p_vals_melt['signif'] = (inter_session_p_vals_melt['value'] < 0.05)
means = apply(inter_session_vars, 2,mean)
ses = apply(inter_session_vars,2,sd)
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]))
inter_session_p_vals_melt
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1))
inter_session_p_vals_melt[['signif']]
inter_session_p_vals_melt[['signif']]+0.1
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1))
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1))
inter_session_vars
hist(inter_session_vars[,1])
hist(inter_session_vars[,2])
hist(inter_session_vars[,3])
hist(inter_session_vars[,4])
data_path = 'ltpfr2_data_processed.csv'
ltpfr2 = fread(data_path)
ltpfr2 = as.data.frame(ltpfr2)
indices = which((ltpfr2['Day'] != 'Sat') & (ltpfr2['Day'] != 'Sun') )
ltpfr2 = ltpfr2[indices,]
ltpfr2['recalled'] = factor(ltpfr2[['recalled']])
ltpfr2['session'] = scale(ltpfr2[['session']]+1)
ltpfr2['Day'] = factor(ltpfr2[['Day']])
#ltpfr2['Block'] = assign_block(ltpfr2[['list']])
#ltpfr2['list'] = assign_list(ltpfr2[['list']])
ltpfr2['list'] = factor(ltpfr2[['list']])
ltpfr2['Alertness'] = scale(ltpfr2[['Alertness']])
ltpfr2['Time'] = (assign_time(ltpfr2[['Time']]))
ltpfr2['Sleep'] = scale(ltpfr2[['Sleep']])
#ltpfr2['Block'] = factor(ltpfr2[['Block']])
n_total_lists = dim(ltpfr2)[1]/24
subjects = unique(ltpfr2[['subject']])
model_lists = list()
for (subject in subjects)
{
indices_subject = which(ltpfr2[['subject']] == subject)
subject_data = ltpfr2[indices_subject,]
# model_subject = glm(recalled ~ serial_pos + list + session +  Alertness + Sleep + Time + Day + list +  recallability -1, data = subject_data, family = 'binomial')
model_subject = glm(recalled ~ -1 + session + Sleep + Alertness + Time + Day + list + Recallability + serial_pos, data = subject_data, family = 'binomial')
model_lists[[subject]] = model_subject
}
# plot coefficients
coeffs_list = lapply(model_lists, function(x){summary(x)$coefficients})
vars_list = c('session', 'Sleep', 'Alertness', 'Time')
inter_session_vars = data.frame()
inter_session_p_vals = data.frame()
for(j in 1:length(coeffs_list)){
coeffs = coeffs_list[[j]]
inter_session_vars = rbind(inter_session_vars, coeffs[vars_list,][,'Estimate'])
inter_session_p_vals = rbind(inter_session_p_vals, coeffs[vars_list,][,4])
}
names(inter_session_vars ) = vars_list
names(inter_session_p_vals ) = vars_list
p_adjust = function(x)
{
return(p.adjust(x, "fdr"))
}
inter_session_p_vals = apply(inter_session_p_vals,2, p_adjust)
inter_session_vars_melt = melt(inter_session_vars, ids = vars_list[2:4])
inter_session_p_vals_melt = melt(inter_session_p_vals)
inter_session_p_vals_melt['signif'] = (inter_session_p_vals_melt['value'] < 0.05)
means = apply(inter_session_vars, 2,mean)
ses = apply(inter_session_vars,2,sd)
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1))
# between sessions variability
# between list variability
# within list variability
data_path = 'ltpfr2_data_processed.csv'
ltpfr2 = fread(data_path)
ltpfr2 = as.data.frame(ltpfr2)
indices = which((ltpfr2['Day'] != 'Sat') & (ltpfr2['Day'] != 'Sun') )
ltpfr2 = ltpfr2[indices,]
ltpfr2['recalled'] = factor(ltpfr2[['recalled']])
ltpfr2['session'] = scale(ltpfr2[['session']]+1)
ltpfr2['Day'] = factor(ltpfr2[['Day']])
#ltpfr2['Block'] = assign_block(ltpfr2[['list']])
#ltpfr2['list'] = assign_list(ltpfr2[['list']])
ltpfr2['list'] = factor(ltpfr2[['list']])
ltpfr2['Alertness'] = scale(ltpfr2[['Alertness']])
ltpfr2['Time'] = scale(assign_time(ltpfr2[['Time']]))
ltpfr2['Sleep'] = scale(ltpfr2[['Sleep']])
#ltpfr2['Block'] = factor(ltpfr2[['Block']])
n_total_lists = dim(ltpfr2)[1]/24
subjects = unique(ltpfr2[['subject']])
model_lists = list()
for (subject in subjects)
{
indices_subject = which(ltpfr2[['subject']] == subject)
subject_data = ltpfr2[indices_subject,]
# model_subject = glm(recalled ~ serial_pos + list + session +  Alertness + Sleep + Time + Day + list +  recallability -1, data = subject_data, family = 'binomial')
model_subject = glm(recalled ~ -1 + session + Sleep + Alertness + Time + Day + list + Recallability + serial_pos, data = subject_data, family = 'binomial')
model_lists[[subject]] = model_subject
}
# plot coefficients
coeffs_list = lapply(model_lists, function(x){summary(x)$coefficients})
vars_list = c('session', 'Sleep', 'Alertness', 'Time')
inter_session_vars = data.frame()
inter_session_p_vals = data.frame()
for(j in 1:length(coeffs_list)){
coeffs = coeffs_list[[j]]
inter_session_vars = rbind(inter_session_vars, coeffs[vars_list,][,'Estimate'])
inter_session_p_vals = rbind(inter_session_p_vals, coeffs[vars_list,][,4])
}
names(inter_session_vars ) = vars_list
names(inter_session_p_vals ) = vars_list
p_adjust = function(x)
{
return(p.adjust(x, "fdr"))
}
inter_session_p_vals = apply(inter_session_p_vals,2, p_adjust)
inter_session_vars_melt = melt(inter_session_vars, ids = vars_list[2:4])
inter_session_p_vals_melt = melt(inter_session_p_vals)
inter_session_p_vals_melt['signif'] = (inter_session_p_vals_melt['value'] < 0.05)
means = apply(inter_session_vars, 2,mean)
ses = apply(inter_session_vars,2,sd)
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1))
# between sessions variability
# between list variability
# within list variability
ltpfr2['Sleep'] = scale(ltpfr2[['Sleep']])*2
n_total_lists = dim(ltpfr2)[1]/24
subjects = unique(ltpfr2[['subject']])
model_lists = list()
for (subject in subjects)
{
indices_subject = which(ltpfr2[['subject']] == subject)
subject_data = ltpfr2[indices_subject,]
# model_subject = glm(recalled ~ serial_pos + list + session +  Alertness + Sleep + Time + Day + list +  recallability -1, data = subject_data, family = 'binomial')
model_subject = glm(recalled ~ -1 + session + Sleep + Alertness + Time + Day + list + Recallability + serial_pos, data = subject_data, family = 'binomial')
model_lists[[subject]] = model_subject
}
# plot coefficients
coeffs_list = lapply(model_lists, function(x){summary(x)$coefficients})
vars_list = c('session', 'Sleep', 'Alertness', 'Time')
inter_session_vars = data.frame()
inter_session_p_vals = data.frame()
for(j in 1:length(coeffs_list)){
coeffs = coeffs_list[[j]]
inter_session_vars = rbind(inter_session_vars, coeffs[vars_list,][,'Estimate'])
inter_session_p_vals = rbind(inter_session_p_vals, coeffs[vars_list,][,4])
}
names(inter_session_vars ) = vars_list
names(inter_session_p_vals ) = vars_list
p_adjust = function(x)
{
return(p.adjust(x, "fdr"))
}
inter_session_p_vals = apply(inter_session_p_vals,2, p_adjust)
inter_session_vars_melt = melt(inter_session_vars, ids = vars_list[2:4])
inter_session_p_vals_melt = melt(inter_session_p_vals)
inter_session_p_vals_melt['signif'] = (inter_session_p_vals_melt['value'] < 0.05)
means = apply(inter_session_vars, 2,mean)
ses = apply(inter_session_vars,2,sd)
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1))
# between sessions variability
# between list variability
# within list variability
data_path = 'ltpfr2_data_processed.csv'
ltpfr2 = fread(data_path)
ltpfr2 = as.data.frame(ltpfr2)
indices = which((ltpfr2['Day'] != 'Sat') & (ltpfr2['Day'] != 'Sun') )
ltpfr2 = ltpfr2[indices,]
ltpfr2['recalled'] = factor(ltpfr2[['recalled']])
ltpfr2['session'] = scale(ltpfr2[['session']]+1)
ltpfr2['Day'] = factor(ltpfr2[['Day']])
#ltpfr2['Block'] = assign_block(ltpfr2[['list']])
#ltpfr2['list'] = assign_list(ltpfr2[['list']])
ltpfr2['list'] = factor(ltpfr2[['list']])
ltpfr2['Alertness'] = scale(ltpfr2[['Alertness']])
ltpfr2['Time'] = scale(assign_time(ltpfr2[['Time']]))*2
ltpfr2['Sleep'] = scale(ltpfr2[['Sleep']])
#ltpfr2['Block'] = factor(ltpfr2[['Block']])
n_total_lists = dim(ltpfr2)[1]/24
subjects = unique(ltpfr2[['subject']])
model_lists = list()
for (subject in subjects)
{
indices_subject = which(ltpfr2[['subject']] == subject)
subject_data = ltpfr2[indices_subject,]
# model_subject = glm(recalled ~ serial_pos + list + session +  Alertness + Sleep + Time + Day + list +  recallability -1, data = subject_data, family = 'binomial')
model_subject = glm(recalled ~ -1 + session + Sleep + Alertness + Time + Day + list + Recallability + serial_pos, data = subject_data, family = 'binomial')
model_lists[[subject]] = model_subject
}
# plot coefficients
coeffs_list = lapply(model_lists, function(x){summary(x)$coefficients})
vars_list = c('session', 'Sleep', 'Alertness', 'Time')
inter_session_vars = data.frame()
inter_session_p_vals = data.frame()
for(j in 1:length(coeffs_list)){
coeffs = coeffs_list[[j]]
inter_session_vars = rbind(inter_session_vars, coeffs[vars_list,][,'Estimate'])
inter_session_p_vals = rbind(inter_session_p_vals, coeffs[vars_list,][,4])
}
names(inter_session_vars ) = vars_list
names(inter_session_p_vals ) = vars_list
p_adjust = function(x)
{
return(p.adjust(x, "fdr"))
}
inter_session_p_vals = apply(inter_session_p_vals,2, p_adjust)
inter_session_vars_melt = melt(inter_session_vars, ids = vars_list[2:4])
inter_session_p_vals_melt = melt(inter_session_p_vals)
inter_session_p_vals_melt['signif'] = (inter_session_p_vals_melt['value'] < 0.05)
means = apply(inter_session_vars, 2,mean)
ses = apply(inter_session_vars,2,sd)
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1))
# between sessions variability
# between list variability
# within list variability
assign_time = function(x)
{
h = (x%%100)/60+ floor(x/100)
}
assign_time(1123)
assign_time = function(x)
{
h = (x%%100)/60+ floor(x/100)
return(h)
}
assign_time(h)
assign_time(7900)
assign_time(1120)
data_path = 'ltpfr2_data_processed.csv'
ltpfr2 = fread(data_path)
ltpfr2 = as.data.frame(ltpfr2)
indices = which((ltpfr2['Day'] != 'Sat') & (ltpfr2['Day'] != 'Sun') )
ltpfr2 = ltpfr2[indices,]
ltpfr2['recalled'] = factor(ltpfr2[['recalled']])
ltpfr2['session'] = scale(ltpfr2[['session']]+1)
ltpfr2['Day'] = factor(ltpfr2[['Day']])
#ltpfr2['Block'] = assign_block(ltpfr2[['list']])
#ltpfr2['list'] = assign_list(ltpfr2[['list']])
ltpfr2['list'] = factor(ltpfr2[['list']])
ltpfr2['Alertness'] = scale(ltpfr2[['Alertness']])
ltpfr2['Time'] = scale(assign_time(ltpfr2[['Time']]))
ltpfr2['Sleep'] = scale(ltpfr2[['Sleep']])
#ltpfr2['Block'] = factor(ltpfr2[['Block']])
n_total_lists = dim(ltpfr2)[1]/24
subjects = unique(ltpfr2[['subject']])
model_lists = list()
for (subject in subjects)
{
indices_subject = which(ltpfr2[['subject']] == subject)
subject_data = ltpfr2[indices_subject,]
# model_subject = glm(recalled ~ serial_pos + list + session +  Alertness + Sleep + Time + Day + list +  recallability -1, data = subject_data, family = 'binomial')
model_subject = glm(recalled ~ -1 + session + Sleep + Alertness + Time + Day + list + Recallability + serial_pos, data = subject_data, family = 'binomial')
model_lists[[subject]] = model_subject
}
# plot coefficients
coeffs_list = lapply(model_lists, function(x){summary(x)$coefficients})
vars_list = c('session', 'Sleep', 'Alertness', 'Time')
inter_session_vars = data.frame()
inter_session_p_vals = data.frame()
for(j in 1:length(coeffs_list)){
coeffs = coeffs_list[[j]]
inter_session_vars = rbind(inter_session_vars, coeffs[vars_list,][,'Estimate'])
inter_session_p_vals = rbind(inter_session_p_vals, coeffs[vars_list,][,4])
}
names(inter_session_vars ) = vars_list
names(inter_session_p_vals ) = vars_list
p_adjust = function(x)
{
return(p.adjust(x, "fdr"))
}
inter_session_p_vals = apply(inter_session_p_vals,2, p_adjust)
inter_session_vars_melt = melt(inter_session_vars, ids = vars_list[2:4])
inter_session_p_vals_melt = melt(inter_session_p_vals)
inter_session_p_vals_melt['signif'] = (inter_session_p_vals_melt['value'] < 0.05)
means = apply(inter_session_vars, 2,mean)
ses = apply(inter_session_vars,2,sd)
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1))
# between sessions variability
# between list variability
# within list variability
ltpfr2['Time']
min(ltpfr2[['Time']])
max(ltpfr2[['Time']])
means
inter_session_vars
# between sessions variability
apply(inter_session_vars,2,t.test)
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1))
+ theme_light()
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1))
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1))
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1))+ theme_light()
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1, size = 3))+ theme_light()
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1, size = 1.0))+ theme_light()
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1, size = 0.5))+ theme_light()
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1, size = 0.5))+ theme_classic()
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1, size = 0.5))+ theme_bw()
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1, size = 0.1))+ theme_bw()
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1))+ theme_bw()
ggplot(inter_session_vars_melt, aes(x = variable, y = value)) + geom_point(aes( alpha = inter_session_p_vals_melt[['signif']]+0.1))+ theme_bw() + ylim(c(-2,2.0))
ls
ls
ls
ls
library(data.table)
library(dplyr)
library(lme4)
library(ggplot2)
source('helper_funcs.R')
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
logit = function(x)
{
x[which(x==0)] = 0.001
x[which(x ==1)] = 0.999
return(log(x/(1-x)))
}
assign_block = function(x)
{
x[which(x<=8)] = 1
x[which((8< x) & (x <=16))] =2
x[which((16<x) & (x<=24))] = 3
return(x)
}
assign_list = function(x)
{
x[which((8< x) & (x <=16))] = x[which((8< x) & (x <=16))]-8
x[which((16<x) & (x<=24))] = x[which((16<x) & (x<=24))]-16
return(x)
}
scale_feature = function(x)
{
x= (x-min(x))/(max(x)-min(x))
}
assign_time = function(x)
{
h = 12-(x%%100)/60- floor(x/100)
return(h)
}
data_path = 'ltpfr2_data_processed.csv'
ltpfr2 = fread(data_path)
ltpfr2 = as.data.frame(ltpfr2)
indices = which((ltpfr2['Day'] != 'Sat') & (ltpfr2['Day'] != 'Sun') )
ltpfr2 = ltpfr2[indices,]
ltpfr2['recalled'] = factor(ltpfr2[['recalled']])
ltpfr2['session'] = scale(ltpfr2[['session']]+1)
ltpfr2['Day'] = factor(ltpfr2[['Day']])
#ltpfr2['Block'] = assign_block(ltpfr2[['list']])
#ltpfr2['list'] = assign_list(ltpfr2[['list']])
ltpfr2['list'] = factor(ltpfr2[['list']])
ltpfr2['Alertness'] = scale(ltpfr2[['Alertness']]+ rnorm(length(ltpfr2[['Alertness']]),0,0.05))
ltpfr2['Time'] = scale(assign_time(ltpfr2[['Time']]))
ltpfr2['Sleep'] = scale(ltpfr2[['Sleep']])
ltpfr2['recallability'] = scale(ltpfr2['recallability'])
#ltpfr2['Block'] = factor(ltpfr2[['Block']])
n_total_lists = dim(ltpfr2)[1]/24
subjects = unique(ltpfr2[['subject']])
model_lists = list()
for (subject in subjects)
{
indices_subject = which(ltpfr2[['subject']] == subject)
subject_data = ltpfr2[indices_subject,]
# model_subject = glm(recalled ~ serial_pos + list + session +  Alertness + Sleep + Time + Day + list +  recallability -1, data = subject_data, family = 'binomial')
model_subject = glm(recalled ~   session +list + Sleep + Alertness + Time + Day +recallability + serial_pos, data = subject_data, family = 'binomial')
model_lists[[subject]] = model_subject
}
# plot coefficients
coeffs_list = lapply(model_lists, function(x){summary(x)$coefficients})
vars_list = c('session', 'Sleep', 'Alertness', 'Time')
result = plot_vars(coeffs_list, vars_list, title = 'intersession.pdf', height = 10, width = 15)
# interlist variability
coeffs_list = lapply(model_lists, function(x){summary(x)$coefficients})
rownames(coeffs_list[[1]])
vars_list = rownames(coeffs_list[[1]])[3:25]
result= plot_vars(coeffs_list, vars_list, title = 'interlist.pdf', height = 10, width = 15)
result$result
# within list variability
vars_list = c('serial_pos', 'recallability', '')
result = plot_vars(coeffs_list, vars_list, title = 'intralist.pdf', height = 10, width = 15)
library(data.table)
library(dplyr)
library(lme4)
library(ggplot2)
source('helper_funcs.R')
